// <auto-generated />
using System;
using Meters.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Meters.Data.Migrations
{
    [DbContext(typeof(MeterContext))]
    [Migration("20190514101833_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Meters.Data.Entities.Index", b =>
                {
                    b.Property<int>("IndexId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MeterId");

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<double>("Value");

                    b.HasKey("IndexId");

                    b.HasIndex("MeterId");

                    b.ToTable("Indexes");
                });

            modelBuilder.Entity("Meters.Data.Entities.Meter", b =>
                {
                    b.Property<int>("MeterId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Location");

                    b.Property<int>("ResourceType");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50);

                    b.HasKey("MeterId");

                    b.ToTable("Meters");

                    b.HasData(
                        new
                        {
                            MeterId = 1,
                            Location = 2,
                            ResourceType = 2,
                            SerialNumber = "TestBathroomColdWater"
                        },
                        new
                        {
                            MeterId = 2,
                            Location = 2,
                            ResourceType = 1,
                            SerialNumber = "TestBathroomHotWater"
                        },
                        new
                        {
                            MeterId = 3,
                            Location = 1,
                            ResourceType = 2,
                            SerialNumber = "TestKitchenColdWater"
                        },
                        new
                        {
                            MeterId = 4,
                            Location = 1,
                            ResourceType = 1,
                            SerialNumber = "TestKitchenHotWater"
                        });
                });

            modelBuilder.Entity("Meters.Data.Entities.Index", b =>
                {
                    b.HasOne("Meters.Data.Entities.Meter", "Meter")
                        .WithMany("Indexes")
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
